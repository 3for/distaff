use std::slice;
use crate::math::field;

// CONSTANTS
// ================================================================================================

// Exponents for S-BOX (Poseidon, Rescue, GMiMC) and inverse S-BOX (rescue)
const ALPHA: u64 = 3;
const INV_ALPHA: u64 = 12297829253624015531;

// MDS matrix used by Poseidon and Rescue
const MDS: [u64; 144] = [
    14570791697008582876, 14287730469917200292, 15111342538701370819,  1111401104756727833, 18343752991270580578, 10395724785100660355, 14391941175009286906,  5491581447267359356,  1031244057765854727,  2741392851187030668,  8356433820458919454, 10361960094523491469,
    17296841519685941390,  1598937820631795543, 18252132164632030075,   241444688886262292, 17599434116007097224,  9231563221418652240, 15805688995498349990, 17256539972135898838,  2330753493485837824,  6251316318077619492,  7679024702804679152,  2943046310091653711,
     8765181257382270816,  2214393267250057585, 10440968658565732009,  9245417370235283261, 10903600118637896817,  4336409820707567775,   373156886479152405,  6889031455917031511,  3512102634804595716, 10883465930001183358,   111817104814006178, 13147393342693302215,
    16731403170144839149,  4199639565163130888, 11662145218068586336, 12136048551747257563, 16207916864411664082,  5795305278626201409,  3540476316084861152,  1979412480869555052, 15915841166779902642, 12798161080806683411, 13864641321606711741, 15619568278035706351,
     6996727129159569475, 13016806715252432443, 10084910677946480774,  4854976610017568115,  3183560086131749081,    84343487446798268,  6976577640482780112,  1974323274754175061,  3184820667768309286,  2042442151413916954, 12542679131679444027,  8555877572558139340,
     1958751724798615870,  6883794720630798095,  7822377053889412653,  5881955449915523948,  1826773441475877560, 14596945442992680206, 15525428857452141988,  2300675574592518485, 14076693432158095299,  3913142224341430328, 15645746834898234524, 10122456385203566801,
    17729236334518869820,  1749133568562304236, 11557582145195575097, 12354965089547101180,  2660703340589826608,   440334420312600854,  2198333919637551622, 18369576650529043046,  7627007928139490203,   777383514316169044,  7198059378673430489,  9515098447333107659,
      806473578789499443,  9336648523780571670,  5686967342712013436, 12904381239407564150,  4756705991254623925, 10206157924696479727,  4806103767866561340,  1872796239547928750, 17178476308939330252, 11771556405037973998,  9117917859381111393, 13067245698773587742,
    10499199438819993852, 12171212168422477108,  5578998829898290932, 12178641820241082619,  4420340793047171628,  1530190253010972336, 15239962422294736463, 15238687364083809199, 12238023565508403339,   849083947368781781,  7020919173690859117,  6037995052907795325,
     6617094955015694929, 17709895726490950223, 12395004788391953988,  4443167981067561554,  7500390692332462441, 12515433586262237946,  5152881173520844228,  2876311526543549543,   665794271176964969, 13140309957664961201,  9790029746103080496,  7580688024839866118,
    10321065351363958810,  8558373207059165438, 15379391566111639810, 14892201863785415949,  9350656882348467407,  5434254718692813409, 12942082639379970277, 11437571946551726842,  7388656188826905221,  4131080631675148417,   721505112626253183, 17463850698301825653,
     4496862336099562608, 14815253423827224307,  3941759144983839864,   496394397619911104, 14326824099506036322, 16750030373530649240,   567590961228605744,  3305769176941360911, 16162169544256723442, 15781486664476971789,  5656405359499826694, 14405311909503260201
];

// Round constants for all hash functions; Poseidon uses all constants, Rescue the first 252, GMiMC uses the first 101
const ARK: [u64; 576] = [
      114590214580931143,   990026313300730203,  1045057248257823412,  1738842170916331719,  1660024061661494622,  4118625024966406515,  2532743523039298950, 13390548470015888379, 16970022055943448291,  3229289085814137249,  7936587485501753336,  8739725378210913269,
     3908716019379605388,  9612982705190869253,  8618151851322356977,  2377359971860592461,  3415531505045617650,  1803014891579917898, 18253631080420666568,  4298533870496457949,  3516726635115581733, 14188758512685690560, 17767631070091881919,  9712595766457023099,
    13640442143959558858,  7906381567491729226, 13468966696328224140, 12028717281587475730, 12360236492067308321, 12835112754115328561, 12823753310782409353,   464425379386213979, 14085297930256173746, 16196250978843008202, 15811509369575956025,  1897390235444443527,
     8685846242118849938,  2057625545053330977, 14051647126032743969, 13204296951363537507, 15287846411328905143,  5335862441182164043, 15571081595035039942, 11731206051330436512, 11654771749971427770, 14954496140063031735, 12129770816065322969, 17947404629239381291,
     1272600380366609460,  2220919760127833817, 14379250151341177495,  9390139499790851184, 11236058065485031565, 17864236451301874186,  5773629776132606410,  8715600359526386850, 16425824203788480088, 17409115598257936569,  5423135786181100641,  8073538104501442588,
     8964464424724770931, 10045064192798612192,  9874857205854545189,  7826079088421977266,  4781663569206863262,  5417874648613702824, 16739233985783933024,  4469597774767595777,  4679477611749215016,  8584374822608982414,  3870778731417206155, 14873483792285815143,
    15860937208548502393,  9205367959479920752,  9632397799556151548, 15641207201774937978, 16046961331377309336, 14256703065251832413,  5656038351339096699,  5836910653676200218,  5340223182091242339,  9255093777916962941, 11826465046601122678, 12590108172722075838,
     8831375762772429133, 10108323264981338471,  7996771765963606092,  4456823801127017073,  6638947615583655259, 12827380617980181113,   896738261464355590, 13923364648304841939, 16941163481097200881,  2814933892951474552,  2763928716174813789,  8124814109136622356,
    16608634632094289187, 11485160594813871566,  5222338859687623994,  2863623879347252536,   285765561992035807, 14127457330899144583, 16895986339069166222,  2716466622487592381, 10179789832469522683, 17039100264908022311,  9026890456900619388,  8710580870654515137,
    11947873316670891644,  1112973284660867749, 11007673183642469915, 14763294168238043814, 16895375066730169259, 13354187610379410185, 18154595923083929136,  5161722626952272978,  7241026283969380040,  8502745946138759783, 17699330642314234768,  1863730773280059059,
    10506798047337663857, 11583225239641066548,  7117468705512735682,  5411870088433704245, 12798502479124248565,  6975065549459864854,  4335784351584493848,  8189718254446049731, 12943689700147890218,  9356770682649253190,  3989125738446004276,  4640735801628367947,
    11084437424138123671,  1236926833682309840,  4156268537770062194, 14239032585103560950,  6547299622782829062,  7776376767812261356,  2989135254698337287,  7256092968019329285, 14188707037259549432,  8422049074455859192,   284391477128702387, 16775376511215779115,
     5325632418193142483,  6738669508591169269,  3362648518227505874, 17119289150453482846,  5754486647487519268,  9097469463743439998,  2037149858489564849,  7984836167078530680,  6768801130968139938,   665613689507731001,  6360173557851361819,  1510285585581949162,
    12924480922475417013,  9698031808966611289,    45095423570381637, 11652226892766320293,  8803408122176621572, 12205462369332976460,    85961106285223169,  3234201255026727919,  8387012370116828251,  9259583648285412165,  5570727129888298990, 10155279417770795079,
    16694418951197876355,  4460878955950299390,  4835033812787157591,  7494896406233705722, 13382585115788912201,  1253519805979009336,  9055475442526883912, 11482753252942536418,  9252093407568167747,  6499152131885064240, 16417801134130688265,  2183680756588088228,
     4919657103465191494,  6496203980144675213,  2963438703557409527, 17670180385508418381,  3686571536559258876, 11645649520402170776,  5433795935500584791, 10521028498777907295,  3586954401532644794, 14738222770780299335,  4758537254264021385,  4987258354806164162,
    11153790522126750648, 12551264533866625651, 12026895217977781113,  6130985911650744988,   660742863064925723, 15728435838135756664,  6523169235006781369,  4363931084647564588, 17035408350711990065, 10887287114234781470,  4303499409630365865,   637659563021190270,
    16556703972734800022, 12927870680923118087,  1477673319208488961,  8700384419743007083,  6059719448680595046, 14723381135997298035,  9733357541940093386, 13651543533069454502, 18375032832072157074,  2790650458893195908, 12566239596188951579, 11417887696602517231,
    15095342153263941166, 12196834433778588611, 10038075628846372084,  2298963299160633022,  6645315222044092080, 15759786865445700391,  1941965682495524095,  7186282174655107969,  6578491494114580749,  3380854232249920781,  5254132503209957135,  8732176820546665878,
    11225748325488875567, 10897565103652250028,  7826191866327071671, 17576152852246544325,  9182064618358072694, 14207439538321506541, 12959926542698839881,  1942769408613955294,  9097026839809584277, 11605870178390216904,  2189846267133984032, 16762109218418199845,
    12650134646349365568, 10520176554432097244, 14981243795409864846,  7479945464639206088,  9965209368988961530,  3034945791846301754, 16032272684740445597, 14528661484935012766,  5841047196059148060,  2719221135769095413,  3190851936165568572,  1164305266058018084,
    17885677150884332555,  5947329387220448339,  7016894678167938105,   120211560097797556, 14910010779341120350,  1172405459466924054, 15893272932775511790,  6327424803852122343,  4135806251735040123, 10962933020584581860,  5629725228396968419,  7525158767962017374,
    17896623204935797561,  3832576278139503531,  3943061593395212048, 11302980479244781607, 17820204584229116774,  1562745209854105478,  2951795178487426576,  5652357482689995611,  8996125454236646900,  9217790001275019778, 17203985458255244261,  9218990590679415453,
     1142061936827087446,  3485587962738468858,  5242966089922811236,  6063677237146099004, 10429466719747587299,  4586009116466735151, 15959353338419288766, 11195385734733065655,   283529781532770116,  4078853325395306005,  3186491963103640941, 13539031210369567137,
     9829178724264119989, 18204716153294124968,  3383138789483030842, 17397821633202638835,  9883547149695037939,   907010472620729080,  8304902812575713794, 14331329283351514796,   221642658918223204,  5385609923943794086, 13667428876990115474,  5186172942936126179,
    13863332755530838626,  5905689143964986175, 10367594978067884995, 12264048850382568692,  5896382313398601680,  3674388902309829291,  8959216493992641954,   937388370139546240,  9296651159758516239, 17860747862653634876,  2602992362346531180,   451702918043897126,
    14799632988478146502, 13922119650107368595, 10483303931558023900, 15850882608924817114,  6150887863929317946,  6401580913706674080,  5373458810467687890, 14789922746334895833,  4190142597848043943,   343359473954613140,  9192301046220782497,  3007835204718287148,
    16489540385416479650,  2169124019061467937, 10133816203841555937,  3453481292123999562,  7267390723493308552,  3078851633331719436,  4886792342586674600, 17590381891315682441,   670612687949387417, 16977809716846529969,  8702861261518213055, 16187176288633596652,
     6753568006804193711,  5221249225950615330, 13818497398442910065, 15174626554736777698,  7079711811973917915, 18263652983345176630,  2307567856873438762,   436813593579246123,   834666877495857133,  7345530097997874145, 10812792283154425515,  9115527772309983459,
     8753380480526737677,  5174930860066945260,  2266349523917941090,  4782969978677808388,  7829564763305991559, 15762670601448801880,  3632718025276090815,   710788059782092579, 18064031994582034297,    25844892353334976, 10940756722905455830,  1097981270823570691,
     3899262017505750737, 12958024067067001252,  1502076825742192309,  7006713201718463286, 13597434219569508911,  1511109735614210289, 10793106541234237943,  4434838229414510491, 13562089816803903154, 12884285110856524538,  5962630196859090857,  5162328662265872981,
     5179917688091495624,  3956623854596830972,  7036223874982736730,  6802733812224482227, 14054489564506049111, 11338234005596413611,  1014845084573886370,  8133081070691434301,  1070396513838557026,  9907315241648096480, 12546870881595554008,  1840352501975548911,
      586016947550655497,  1181200224431200448, 17212290156069311432, 14116271023516112635,  3254015523572414168,  5844087340797013469, 12952019170290061144,  5228867954193026115,  1881967539013816247,  8509194232975221711,  5868274750934835586, 16288434731211255314,
    14958442871979358931, 11822274274318289529,  1973485970859047339,  6120707618140226928, 13961433258726092287, 10719195990536442378, 11815673925325563840, 17637152872802269458,  9932733041070114587,  9557884820396670416, 15747415733310399871,  6074799964817859728,
    11493078310996490427,  6293656781992971048, 14764420750905223370,  9636214687203790268, 17766160827432892892,  2197107973040461361,  4239803076855274454, 17543005444662489846, 10661214854209793306, 14247069745950754832, 13921663722301022407,  3995899122494351890,
    17734980888338851716, 14892660669093188890,  3943592705078626682,  9868326703975390507,  8956425687501605390, 17074667133444275824,  5508552264118111679,  2003170705407721154,  1052605157103337641,  9022017159895646810, 17289152732814477935, 16096970965071782114,
    10202536833887604967,  5918832335803203387,  1383455247670279526, 12944874465415629855, 16693772637043832103, 15741505946085524204, 17629873331211196181,  3497894114219396423, 14928114976960729823,  9317110797416290859, 15370314507996569648, 13546676094138286442,
    12518195941513416917,  4736248346744498621,  1159767898658080784, 10769183869670443739,  3266963853229650352,  4011767499104733663,  4997259893788947301,  4574902153055946859, 10684348694743942381,  5081188810297342538, 11256472759616983491, 13376115139657700495,
    11214700291435752803, 16361045397259471897,  9544951918410709195, 15117501872124420196,  8204167903207877595,   423176604088132676,  7849046869522704828, 12235521319676307825,  3267049525274971360, 18442698392162234773,  7776924977396323937, 12060168501668305086,
     7278737340273729024, 16040870600248172866, 16314844611809030130,   587062214942811973,   284669455457466361, 16021426595664760806,   918693607959299079,  2288763611228717849,   539010695564176317, 11937465916023393125,  1876458503958517122,  5882002828311584184,
     9632476787296845306,  1811670684464580469,  3816752144072637070,  1477556805125618790,   317086808063359823, 12475734013871425323, 17011250880618857925, 12420143380214920596, 15002762456373063822,  6632818766179832239, 15619025768378502570, 12281704079005420364,
     8309088014629841902, 17942500793462639347,  3942036844435847494,  2800025384069223329,  9764907036191531080, 14639072926479003191,  7889027773648465531, 13639351723340734888,  8581229346344256495, 14876756753077925860, 15457557614227200298,  3501867387205609395,
    11444388961015095120,  1646123142543153885, 12987242896706062998,  3382185777516162884,   205122493221143555, 12358119085445179457,  9013475165553460386, 12328818689526557000,  5895648429410956929, 18255423483797281899,  7311000267140650535, 10260448804412301523,
    11492003051758926355,  2334874143861420006, 13769768334308975778, 10528245658591735274,  2826381390545626712, 17755494826989855866,  4927666281528371520,  4734491922883608096,  3726647943470549485, 11646902605779755414,  1907289975516346628, 15376099443303842526,
    12616924254483594505,  6845643659379982542,  3130156169444725099,   881871609820676089,  9864220193527886329, 16288694994812828085,  4740348106518516170,  7878304683261551880,  9225526726380956700, 16177417408950047005,  1803503062568093728, 16061180298344296719,
    11456933937126617920,  5207919175286668364,  8420392952401044507, 10303440176423837159, 10466841635995445926,  2769022934863162595,  1955331768969052357, 16869531341979974013, 10603023622828050622, 10963028063991029402,  9200255584710552020,  8568049640774307351,
     9460646572212057123, 12223607675393914144,  2040986762768781627, 15145163928422134965,  4238615813589110373,  8436901472636267292,  4552047849587881485, 17526281376299564207,  5774808286949392013,  5558464112153015047,  4628978750252419947,  5370052494137599975,
     4105063176464222193,  7864052742865962915, 12955722098161105476,  8055171802116062860, 16183717194154830781,  1813655357262802270, 14543393453455665127, 18058327385375674723,  2017675339296975017,  6167374634441380011, 18296183125886233466,  6496551456625107909
];

// ------------------------------------------------------------------------------------------------
/// Poseidon hash function
pub fn poseidon(values: &[u64], result: &mut [u64]) {
    debug_assert!(values.len() <= 8, "expected fewer than 8 values but received {}", values.len());
    debug_assert!(result.len() == 4, "expected result slice to have 4 elements but received {}", result.len());

    // copy values into state and set the remaining state elements to 0
    let mut state = [0u64; 12];
    state[..values.len()].copy_from_slice(values);

    // execute round function 48 times
    for i in 0..48 {

        add_constants(&mut state, i * 12);

        if i < 4 || i >= 44 {
            // full round
            apply_sbox(&mut state);
        }
        else {
            // partial round
            state[11] = field::exp(state[11], ALPHA);
        }

        apply_mds(&mut state);
    }

    // return the result
    result.copy_from_slice(&state[..4]);
}

// ------------------------------------------------------------------------------------------------
/// Rescue hash function
pub fn rescue(values: &[u64], result: &mut [u64]) {
    debug_assert!(values.len() <= 8, "expected fewer than 8 values but received {}", values.len());
    debug_assert!(result.len() == 4, "expected result slice to have 4 elements but received {}", result.len());

    // copy values into state and set the remaining state elements to 0
    let mut state = [0u64; 12];
    state[..values.len()].copy_from_slice(values);

    // apply round function 10 times
    add_constants(&mut state, 0);
    for i in 0..10 {

        // step 1
        apply_inv_sbox(&mut state);
        apply_mds(&mut state);
        add_constants(&mut state, (i * 2 + 1) * 12);

        // step 2
        apply_sbox(&mut state);
        apply_mds(&mut state);
        add_constants(&mut state, (i * 2 + 2) * 12);
    }

    // return the result
    result.copy_from_slice(&state[..4]);
}

// ------------------------------------------------------------------------------------------------
/// GMiMC_erf hash function
pub fn gmimc(values: &[u64], result: &mut [u64]) {
    debug_assert!(values.len() <= 8, "expected fewer than 8 values but received {}", values.len());
    debug_assert!(result.len() == 4, "expected result slice to have 4 elements but received {}", result.len());

    // copy values into state and set the remaining state elements to 0
    let mut state = [0u64; 12];
    state[..values.len()].copy_from_slice(values);

    for i in 0..101 {
        let s0 = state[0];
        let mask = field::exp(field::add(s0, ARK[i]), ALPHA);
        for j in 1..12 {
            state[j - 1] = field::add(mask, state[j]);
        }
        state[11] = s0;
    }

    // return the result
    result.copy_from_slice(&state[..4]);
}

// ------------------------------------------------------------------------------------------------
/// Wrapper around blake3 hash function
pub fn blake3(values: &[u64], result: &mut [u64]) {
    debug_assert!(result.len() == 4, "expected result slice to have 4 elements but received {}", result.len());
    
    let values = unsafe { slice::from_raw_parts(values.as_ptr() as *const u8, values.len() * 8) };
    let hash = blake3::hash(&values);
    let result: &mut [u8; 32] = unsafe { &mut *(result as *const _ as *mut [u8; 32]) };
    result.copy_from_slice(hash.as_bytes());
}

// HELPER FUNCTIONS
// ================================================================================================
fn add_constants(state: &mut[u64; 12], offset: usize) {
    for i in 0..12 {
        state[i] = field::add(state[i], ARK[offset + i]);
    }
}

fn apply_sbox(state: &mut[u64; 12]) {
    for i in 0..12 {
        state[i] = field::exp(state[i], ALPHA);
    }
}

fn apply_inv_sbox(state: &mut[u64; 12]) {
    // TODO: optimize
    for i in 0..12 {
        state[i] = field::exp(state[i], INV_ALPHA);
    }
}

fn apply_mds(state: &mut[u64; 12]) {
    let mut result = [0u64; 12];
    let mut temp = [0u64; 12];
    for i in 0..12 {
        for j in 0..12 {
            temp[j] = field::mul(MDS[i * 12 + j], state[j]);
        }

        for j in 0..12 {
            result[i] = field::add(result[i], temp[j]);
        }
    }
    state.copy_from_slice(&result);
}

// TESTS
// ================================================================================================
#[cfg(test)]
mod tests {

    #[test]
    fn poseidon() {
        let value = [1u64, 2, 3, 4, 5, 6, 7, 8];
        let mut result = [0u64; 4];
        super::poseidon(&value, &mut result);

        assert_eq!([18371635412595540007, 1894744910730962130, 10854054167595012332, 14797165172502003225], result);
    }

    #[test]
    fn rescue() {
        let value = [1u64, 2, 3, 4, 5, 6, 7, 8];
        let mut result = [0u64; 4];
        super::rescue(&value, &mut result);

        assert_eq!([8675231609413418651, 5008873880099962244, 1143406322110855369, 6071655998975610945], result);
    }

    #[test]
    fn gmimc() {
        let value = [1u64, 2, 3, 4, 5, 6, 7, 8];
        let mut result = [0u64; 4];
        super::gmimc(&value, &mut result);

        assert_eq!([13347011516039751531, 1694648777756066234, 2833950855839661719, 5145889775304403416], result);
    }
}